)+
labs(
title = "Dual y axis plot",
x="bins"
)
})
}
shinyApp(ui, server)
clean
riskdata<- read.csv("credit_risk_dataset.csv")
riskdata1<-na.omit(riskdata)
crd<-subset(riskdata1,riskdata1$person_age<90)
View(crd)
crd
?quantile
quantile(cdr,probs = seq(0,1,0.1))
quantile(crd,probs = seq(0,1,0.1))
quantile(crd$person_age,probs = seq(0,1,0.1))
crd[quantile(crd$person_age,probs = seq(0,1,0.1)),]
####
plot1d<-ggplot()+
geom_bar(data=riskdata1
,aes(person_age,fill=as.factor(loan_status))
,width = 3,
stat = "count",
position = "stack")+
scale_x_continuous(n.breaks = 5,
limits = c(15,80))
plot1d<-ggplot_build(plot1d)
plot1d
total<-sum(plot1d$data[[1]]$count)
total
plot1d$data[[1]]$count<-plot1d$data[[1]]$count*100/total
length(rep(plot1d$data[[1]][plot1d$data[[1]]$group==2,plot1d$data[[1]]$count],2))#/
length(plot1d$data[[1]]$count)
ggplot()+
geom_bar(data=plot1d$data[[1]],
aes(x=x,y=count),
stat = "identity")
?group_by
mtcars
hi<-crd
group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
hello<-group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
class(hello)
ggplot()+
geom_bar(data=hello,aes(person_age))
View(hello)
ggplot()+
geom_bar(data=hello,aes(G))
ggplot()+
geom_bar(data=hello,aes(G))
yo<-ggplot()+
geom_bar(data=hello,aes(G))
yo<-ggplot_build(yo)
yo$data[[1]]
sum(yo$data[[1]]$count)
(yo$data[[1]])
yo1<-(yo$data[[1]])
yo1$G<-hello$G
yo1$G<-as.factor(hello$G)
xlab(yo)
yo<-ggplot()+
geom_bar(data=hello,aes(G))
xlab(yo)
hello$G
as.factor(hello$G)
levels(as.factor(hello$G))
?geom_bar
yo1<-(yo$data[[1]])
hi<-crd
hello<-group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
yo<-ggplot()+
geom_bar(data=hello,aes(G))
yo<-ggplot_build(yo)
yo1<-(yo$data[[1]])
yo1$G<-levels(as.factor(hello$G))
hi<-crd
hello<-group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.2))))
yo<-ggplot()+
geom_bar(data=hello,aes(G))
yo<-ggplot_build(yo)
yo1<-(yo$data[[1]])
yo1$G<-levels(as.factor(hello$G))
?quantile
yo1<-(yo$data[[1]])
yo1
hello<-group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.2))))
yo<-ggplot()+
geom_bar(data=hello,aes(G))
axis.text.x(yo)
theme(yo)
class(theme(yo))
theme(yo)
theme(yo,axis.text.x)
yo<-ggplot_build(yo)
yo$data
yo$layout
xlabel(yo)
xtick(yo)
yo1<-(yo$data[[1]])
else {yo1$G<-c(levels(as.factor(hello$G),"NA"))}
if (length(yo1$group)==length(levels(as.factor(hello$G)))){
yo1$G<-levels(as.factor(hello$G))
}
else yo1$G<-c(levels(as.factor(hello$G),"NA"))
?else
?if
else
if (length(yo1$group)==length(levels(as.factor(hello$G)))){
yo1$G<-levels(as.factor(hello$G))
} else {
yo1$G<-c(levels(as.factor(hello$G),"NA"))
}
hi<-crd
hello<-group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.2))))
yo<-ggplot()+
geom_bar(data=hello,aes(G))
yo<-ggplot_build(yo)
yo1<-(yo$data[[1]])
if (length(yo1$group)==length(levels(as.factor(hello$G)))){
yo1$G<-levels(as.factor(hello$G))
} else {
yo1$G<-c(levels(as.factor(hello$G),"NA"))
}
if (length(yo1$group)==length(levels(as.factor(hello$G)))){
yo1$G<-levels(as.factor(hello$G))
} else {
yo1$G<-c(levels(as.factor(hello$G)),"NA")
}
yo1$perc<-yo1$count*100/sum(yo1$count)
yo1
ggplot(data=clean(), aes(x=clean()[,2],fill=as.factor(clean()[,2])))+
geom_flat_violin(
aes(y=clean()[,1]),
position = position_nudge(x=0.1,y=0),adjust=1)+
geom_point(aes(y=clean()[,1]),
position = position_jitter(width=0.1),size=0.1,alpha=0.1)+
geom_boxplot(aes(x=as.numeric(clean()[,2])+0.1,y=clean()[,1])
,width=0.1,outlier.shape = NA,alpha=0.5)+
coord_flip()+
labs(
title = paste("Raincloud Plot for the ",input$indp_var," data"),
x= input$dp_var,
y=input$indp_var
)
runApp('app3.R')
yo1
yo<-ggplot()+
geom_bar(data=hello,aes(G,fill=as.factor(loan_status)))
yo<-ggplot_build(yo)
yo
yo1<-(yo$data[[1]])
yo1
hello<-group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
yo<-ggplot()+
geom_bar(data=hello,aes(G,fill=as.factor(loan_status)))
yo<-ggplot_build(yo)
yo1<-(yo$data[[1]])
if (length(yo1$group)==length(levels(as.factor(hello$G)))){
yo1$G<-levels(as.factor(hello$G))
} else {
yo1$G<-c(levels(as.factor(hello$G)),"NA")
}
yo1$perc<-yo1$count*100/sum(yo1$count)
yo1
?geom_bar
hello
hello<-group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
yo<-ggplot()+
geom_bar(data=hello,aes(loan_status,fill=as.factor(G)))
yo<-ggplot_build(yo)
yo1<-(yo$data[[1]])
yo1
ggplot()+
geom_bar(data=hello,aes(loan_status,fill=as.factor(G)))
yo<-ggplot_build(yo)
yo1<-(yo$data[[1]])
if (length(yo1$group)==length(levels(as.factor(hello$G)))){
yo1$G<-levels(as.factor(hello$G))
} else {
yo1$G<-c(levels(as.factor(hello$G)),"NA")
}
yo1$perc<-yo1$count*100/sum(yo1$count)
yo1
hi<-crd
hello<-group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
yo<-ggplot()+
geom_bar(data=hello,aes(G))
yo<-ggplot_build(yo)
yo1<-(yo$data[[1]])
if (length(yo1$group)==length(levels(as.factor(hello$G)))){
yo1$G<-levels(as.factor(hello$G))
} else {
yo1$G<-c(levels(as.factor(hello$G)),"NA")
}
yo1$perc<-yo1$count*100/sum(yo1$count)
library("cowplot")
library("dplyr")
library("shiny")
library("shinydashboard")
library("shinythemes")
library("ggplot2")
library("scales")
library("plyr")
library("smooth","Hmisc")
library("readr")
library("patchwork")
source("R_rainclouds.R")
source("summarySE.R")
source("simulateData.R")
ui <- fluidPage(
theme=shinytheme("darkly"),
titlePanel("Thalamus Infotech"),
sidebarLayout(
sidebarPanel(
width=3,
fileInput(
inputId = "file",
label = "Upload File",
accept = c("text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
selectInput(
inputId = "dp_var",
label = "Depended Variable (y): ",
"Names"
),
selectInput(
inputId = "indp_var",
label = "Independed Variable (x): ",
"Names"
)
),
mainPanel(
wellPanel( fluidRow(
column(width=6,plotOutput("plot1")),
column(width=6,plotOutput("plot2")),
)),
wellPanel(fluidRow(
column(width=6, plotOutput("plot3")),
(column(width=6, tableOutput("table2"))
)
))
)
))
server <- function(input, output, session) {
observe({
updateSelectInput(
session,
inputId = "dp_var",
choices = colnames(data1()),
selected = colnames(data1())[9]
)
})
observe({
updateSelectInput(
session,
inputId = "indp_var",
choices = colnames(data1()),
selected = colnames(data1())[1]
)
})
data1<- reactive({
req(input$file)
df<-read.csv(input$file$datapath)
df<-na.omit(df)
df
})
clean<-reactive({
(data1()[ ,c(input$indp_var,input$dp_var)])
})
new<-reactive({
appPlot2<-ggplot()+
geom_histogram(data=clean(), aes(x=clean()[,1],fill=as.factor(clean()[,2])),
color="black",
binwidth = 20
)
appplot3<-ggplot_build(appPlot2)
new<-appplot3$data[[1]]
new
})
total<-reactive({
sum(new()$count)
})
ppn_perc<-reactive({
((new()[new()$group==2,]$count+new()[new()$group==1,]$count)*100/total())
})
bdl_perc<-reactive({
(new()[new()$group==2,]$count*100/(new()[new()$group==1,]$count+new()[new()$group==2,]$count))
})
good_dist<-reactive({
new()[new()$group==1,]$count/sum(new()[new()$group==1,]$count)
})
bad_dist<-reactive({
new()[new()$group==2,]$count/sum(new()[new()$group==2,]$count)
})
WOE<-reactive({
log(good_dist()/bad_dist())
})
table_fin<-reactive({
cbind(new()[1:length(WOE()),c("xmin","xmax")],bad_dist(),good_dist(),WOE())
})
new1<-reactive({
cbind(new()[,c("count","x","group")],ppn_perc(),bdl_perc())
})
output$table2<-renderTable( caption="Calculation of WOE",
caption.placement="top",
{
return(table_fin())
})
output$plot2<- renderPlot({
ggplot(data=clean(), aes(clean()[,1],fill=as.factor(clean()[,2])))+
geom_histogram(
color="black",
binwidth = 10
)+
labs(
title = paste("Histogram of ",input$indp_var," data"),
x=input$indp_var
)
})
output$plot1<- renderPlot({
ggplot(data=clean(), aes(x=clean()[,2],fill=as.factor(clean()[,2])))+
geom_flat_violin(
aes(y=clean()[,1]),
position = position_nudge(x=0.1,y=0),adjust=1)+
geom_point(aes(y=clean()[,1]),
position = position_jitter(width=0.1),size=0.1,alpha=0.1)+
geom_boxplot(aes(x=as.numeric(clean()[,2])+0.1,y=clean()[,1])
,width=0.1,outlier.shape = NA,alpha=0.5)+
coord_flip()+
labs(
title = paste("Raincloud Plot for the ",input$indp_var," data"),
x= input$dp_var,
y=input$indp_var
)
})
output$plot3<-renderPlot({
ggplot()+
geom_bar(data = new1(),aes(x=new1()[,2],y=new1()[,4]),
stat="identity",
position="identity",
col="black",
fill="darkseagreen3")+
geom_line(
data=new1(),aes(x=new1()[,2],y=new1()[,5]),
na.rm=T,
linetype=4,size=1.05,col="seagreen")+
geom_point(data=new1(),aes(x=new1()[,2],y=new1()[,5]),
na.rm=T
,col="seagreen",
size=2,shape=15)+
scale_y_continuous(
name=colnames(new1())[4],
sec.axis = sec_axis(trans = ~.*1,name=colnames(new1())[5])
)+
labs(
title = "Dual y axis plot",
x="bins"
)
})
}
shinyApp(ui, server)
badhello<-group_by(hi[hi$loan_status==1,], G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
hi<-crd
hello<-group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
badhello<-group_by(hi[hi$loan_status==1,], G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
goodhello<-group_by(hi[hi$loan_status==0,], G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
badhello<-group_by(hi[hi$loan_status==1,], G=hello$G)
badhello<-group_by(hi[hi$loan_status==1,], G=cut(person_age,breaks=levels(as.factor(hello$G))))
bad hello
badhello
View(badhello)
View(goodhello)
hello<-group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
View(hello)
yo<-ggplot()+
geom_histogram(data=hello,aes(G))
yo<-ggplot_build(yo)
yo
yo<-ggplot()+
geom_histogram(data=hello,aes(G),stat=count)
yo<-ggplot()+
geom_histogram(data=hello,aes(G),stat="count")
yo<-ggplot()+
geom_histogram(data=hello,aes(G),stat="count")
yo<-ggplot_build(yo)
yo
yo1<-(yo$data[[1]])
yo1
yo<-ggplot()+
geom_bar(data=hello,aes(G))
yo<-ggplot_build(yo)
yo1<-(yo$data[[1]])
yo
badhello<-hello[hello$loan_status==1,]
goodhello<-hello[hello$loan_status==2,]
badyo<-ggplot()+
geom_bar(data=badhello,aes(G))
goodyo<-ggplot()+
geom_bar(data=goodhello,aes(G))
goodyo
badyo
goodyo
goodhello<-hello[hello$loan_status==2,]
goodyo<-ggplot()+
geom_bar(data=goodhello,aes(G))
goodyo
badyo<-ggplot_build(badyo)
goodhello<-hello[hello$loan_status==0,]
goodyo<-ggplot()+
geom_bar(data=goodhello,aes(G))
goodyo
goodyo<-ggplot_build(goodyo)
goodyo1<-goodyo$data[[1]]
yo<-ggplot()+
geom_bar(data=hello,aes(G))
badyo1<-badyo$data[[1]]
goodyo<-ggplot()+
geom_bar(data=goodhello,aes(G))
goodyo<-ggplot_build(goodyo)
goodyo1<-goodyo$data[[1]]
yo1$bdl_perc<-badyo1$count/yo1$count
yo1$gdl_perc<-goodyo1$count/yo1$count
yo1
yo1[-11,]
yo1$woe<-log(yo1$gdl_perc/yo1$bdl_perc)
yo1[-11,]
hi<-crd
hello<-group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
badhello<-hello[hello$loan_status==1,]
goodhello<-hello[hello$loan_status==0,]
yo<-ggplot()+
geom_bar(data=hello,aes(G))
yo<-ggplot_build(yo)
yo1<-(yo$data[[1]][-11,])
badyo<-ggplot()+
geom_bar(data=badhello,aes(G))
badyo<-ggplot_build(badyo)
badyo1<-badyo$data[[1]]
goodyo<-ggplot()+
geom_bar(data=goodhello,aes(G))
goodyo<-ggplot_build(goodyo)
goodyo1<-goodyo$data[[1]]
yo1$bdl_perc<-badyo1$count*100/yo1$count
yo1$gdl_perc<-goodyo1$count*100/yo1$count
hi<-crd
hello<-group_by(hi, G=cut(person_age,breaks=quantile(person_age,probs=seq(0,1,0.1))))
badhello<-hello[hello$loan_status==1,]
goodhello<-hello[hello$loan_status==0,]
yo<-ggplot()+
geom_bar(data=hello,aes(G))
yo<-ggplot_build(yo)
yo1<-(yo$data[[1]][-11,])
badyo<-ggplot()+
geom_bar(data=badhello,aes(G))
badyo<-ggplot_build(badyo)
badyo1<-badyo$data[[1]][-11,]
goodyo<-ggplot()+
geom_bar(data=goodhello,aes(G))
goodyo<-ggplot_build(goodyo)
goodyo1<-goodyo$data[[1]][-11,]
yo1$bdl_perc<-badyo1$count*100/yo1$count
yo1$gdl_perc<-goodyo1$count*100/yo1$count
yo1$woe<-log(yo1$gdl_perc/yo1$bdl_perc)
yo1[-11,]
yo1
yo1
yo1$G<-levels(as.factor(hello$G))
yo1
yo1$ppn_perc<-yo1$count/sum(yo1$count)
yo1
ggplot()+
geom_bar(data=yo1,
aes(x="",y=count),
)
ggplot()+
geom_bar(data=yo1,
aes(x="",y=count),
stat="identity")
ggplot()+
geom_bar(data=yo1,
aes(x=G,y=ppn_perc),
stat="identity")
yo1$ppn_perc<-yo1$count*100/sum(yo1$count)
yo1
ggplot()+
geom_bar(data=yo1,
aes(x=G,y=ppn_perc),
stat="identity")
ggplot()+
geom_bar(data=yo1,
aes(x=G,y=ppn_perc),
stat="identity")+
geom_line(data=yo1,
aes(x=G,y=bdl_perc))
ggplot()+
geom_bar(data=yo1,
aes(x=G,y=ppn_perc),
stat="identity")+
geom_line(data=yo1,
aes(x,y=bdl_perc))
ggplot()+
geom_bar(data=yo1,
aes(x=G,y=ppn_perc),
stat="identity")+
geom_line(data=yo1,
aes(x,y=bdl_perc))+
geom_point(data=yo1,
aes(x,y=bdl_perc))
